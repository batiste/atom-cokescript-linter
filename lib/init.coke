coke = require('cokescript')

# Error: Parser error at line 7 char 10:
def computeRange(msg)
  reg = /error at line ([0-9]+) char ([0-9]+)/
  m = msg.match(reg)
  
  if m == null
    return [[1, 0], [1, 0]]
  line = parseInt(m[1], 10)
  col = parseInt(m[2], 10)

  return [line - 1, col], [line - 1, col + 1]

linter = {
  grammarScopes: ['source.cokescript', 'source.coke'],
  scope: 'file',
  lintOnFly: true,
  lint: def(textEditor)
    filePath = textEditor.getPath()
    source = textEditor.getText()
    try
      coke.generateModule(source)
    catch(err)
      rev = err.message.split("\n").reverse()
      text = rev[1] + ' ' + rev[0]
      return [{
        type: 'error',
        filePath: filePath,
        text: text,
        range: computeRange(err.message)
      }]

    return []
}

module.exports = {
  config: {},
  provideLinter: def()
    return linter
}
